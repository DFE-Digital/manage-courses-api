trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'release'
  buildPlatform: 'anycpu'
  pgusername: 'vsts'

steps:
- script: |
    GIT_SHORT_SHA=$(echo $(Build.SourceVersion) | cut -c 1-7)
    echo "##vso[build.updatebuildnumber]$GIT_SHORT_SHA"
  displayName: 'Set version number'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/**/*.csproj'
    noCache: true
    feedsToUse: config
    nugetConfigPath: nuget.config

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)  --no-restore'

- task: DotNetCoreCLI@2
  displayName: Build Tests
  inputs:
    projects: 'tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)  --no-restore'

- bash: |
   #!/bin/bash
   echo "##vso[task.setvariable variable=PG_USERNAME;]$pgusername"
  displayName: Adding environmental variables


- bash: |
   #!/bin/bash
   echo "PG env Username: $(PG_USERNAME)"
   echo "PG Username: $(pgusername)"
  displayName: Show environmental variables

- bash: |
   #!/bin/bash

   sudo add-apt-repository "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main"
   wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
   sudo apt-get update
   sudo apt-get install postgresql-9.6
   sudo apt-get install postgresql-client-9.6
   sudo -u postgres createuser --superuser vsts
   sudo -u postgres createdb vsts
  displayName: 'Install PostgresSQL 9.6 Client Commons package'



- task: DotNetCoreCLI@2
  displayName: Execute Unit Tests
  inputs:
    command: test
    projects: 'tests/**/*.Tests.csproj'
    arguments: '--configuration $(buildConfiguration)'
  enabled: true

- task: DotNetCoreCLI@2
  displayName: 'Publish API'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/ManageCourses.Api/ManageCourses.Api.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Publish Course Exporter Utility'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/ManageCourses.CourseExporterUtil/ManageCourses.CourseExporterUtil.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Publish Integration Tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'tests/ManageCourses.Tests/ManageCourses.Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     azure/**
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/publish'
